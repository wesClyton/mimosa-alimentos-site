---
import CatalogoBrands from '@components/CatalogoBrands';
import CatalogoProducts from '@components/CatalogoProducts';
import CatalogoTypes from '@components/CatalogoTypes';
import Footer from '@components/Footer.astro';
import Header from '@components/Header.astro';
import { Title } from '@components/Title';
import Layout from '@layouts/Layout.astro';
import { MENU_ITEMS } from '@utils/menu.contants';
import { EProdutosCategorias } from 'src/enums/produtos-categorias.enum';

const categorias: { iconBlack: string; iconWhite: string; name: string }[] = [
  {
    iconBlack: 'restaurantes-black.png',
    iconWhite: 'restaurantes-white.png',
    name: EProdutosCategorias.Restaurantes,
  },
  {
    iconBlack: 'bares-black.png',
    iconWhite: 'bares-white.png',
    name: EProdutosCategorias.Bares,
  },
  {
    iconBlack: 'lanches-black.png',
    iconWhite: 'lanches-white.png',
    name: EProdutosCategorias.Lanches,
  },
  {
    iconBlack: 'pizzarias-black.png',
    iconWhite: 'pizzarias-white.png',
    name: EProdutosCategorias.Pizzarias,
  },
  {
    iconBlack: 'mercado-black.png',
    iconWhite: 'mercado-white.png',
    name: EProdutosCategorias.Supermercados,
  },
];
---

<Layout>
  <Header />

  <main class="container-center px-5 py-10 md:pb-20">
    <Title
      title="Catálogo"
      breadcrumbs={[
        {
          label: MENU_ITEMS.home.label,
          href: MENU_ITEMS.home.href,
        },
        {
          label: MENU_ITEMS.catalogo.label,
          href: MENU_ITEMS.catalogo.href,
        },
      ]}
    />

    <div class="container-center mt-10 flex flex-col gap-5 md:mt-15 lg:flex-row">
      <div class="flex flex-col rounded-2xl bg-white lg:flex-1 lg:pb-5">
        <div>
          <img class="mx-auto w-50" src="/catalogo/meu-mercado-mimosa.png" alt="Meu mercado Mimosa" />

          <div class="px-5 text-left">
            <div class="flex items-center justify-between">
              <h3 class="mb-3 text-2xl leading-6 font-bold text-red-800">Filtros rápidos</h3>
              <div class="flex items-center gap-2">
                <button
                  id="catalogo-limpar-filtros"
                  class="mr-2 mb-3 flex h-8 items-center justify-center rounded bg-gray-200 px-3 text-xs font-bold text-red-800 transition hover:bg-red-800 hover:text-white"
                  type="button"
                  aria-label="Limpar filtros"
                  style="display:none"
                >
                  Limpar filtros
                </button>
                <button
                  id="catalogo-filtros-toggle"
                  class="-mt-3 ml-2 flex h-8 w-8 cursor-pointer items-center justify-center rounded transition lg:hidden"
                  aria-label="Mostrar/Esconder filtros"
                  type="button"
                >
                  <img src="/hamburger-menu-red.svg" alt="Menu Filtros" class="h-6 w-6" />
                </button>
              </div>
            </div>

            <div id="filtros-rapidos" class="hidden transition-all duration-300 lg:block">
              <input
                id="catalogo-busca"
                class="input border-1 border-solid border-gray-200"
                type="text"
                placeholder="Buscar produto"
              />

              <CatalogoBrands client:load />

              <CatalogoTypes client:load />
            </div>
          </div>
        </div>
      </div>

      <div class="flex flex-col gap-5 lg:flex-3">
        <div class="rounded-2xl bg-white p-5">
          <h3 class="mb-3 text-2xl leading-6 font-bold text-red-800">Procurar por categoria</h3>
          <ul
            class="flex flex-row flex-wrap items-center justify-center gap-1 lg:justify-between"
            id="categorias-lista"
          >
            {
              categorias.map((categoria, idx) => (
                <li class="flex w-full items-center justify-center border-b-1 border-solid border-gray-200 last:border-b-0 lg:aspect-square lg:w-1/5 lg:max-w-[18%] lg:border-1 lg:last:border-1">
                  <a
                    href="#"
                    class="item-categoria flex h-full w-full flex-row items-center justify-center gap-2 px-5 py-2 lg:flex-col lg:py-5"
                    data-index={idx}
                    data-icon-black={categoria.iconBlack}
                    data-icon-white={categoria.iconWhite}
                  >
                    <img class="mx-auto w-4 lg:w-10" src={'/catalogo/' + categoria.iconBlack} alt={categoria.name} />
                    <span class="w-full text-left text-xs lg:text-center">{categoria.name}</span>
                  </a>
                </li>
              ))
            }
          </ul>
        </div>
        <div id="lista-produtos" class="rounded-2xl bg-white p-5">
          <div class="flex flex-col gap-5">
            <CatalogoProducts client:load />
          </div>
        </div>
      </div>
    </div>
  </main>

  <Footer />
</Layout>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    buttonFiltros();
    inputBuscarProdutos();
    inputBuscarPorCategorias();
    limparFiltros();
    monitorarFiltrosAtivos();
  });

  function limparFiltros() {
    const btnLimpar = document.getElementById('catalogo-limpar-filtros');
    const buscaInput = document.getElementById('catalogo-busca');
    const buscaInputs = document.getElementsByClassName('item-categoria');

    btnLimpar.addEventListener('click', () => {
      // Limpa input de busca
      if (buscaInput) {
        buscaInput.value = '';
        window.dispatchEvent(new CustomEvent('productsSearch', { detail: '' }));
      }

      // Remove active das categorias
      Array.from(buscaInputs).forEach((el) => {
        el.classList.remove('active', 'bg-red-800', 'text-white');
        el.querySelector('img').src = '/catalogo/' + el.dataset.iconBlack;
        el.querySelector('span').classList.remove('text-white');
      });

      // Dispara evento para limpar filtro de categoria
      window.dispatchEvent(new CustomEvent('categorySearch', { detail: '' }));
    });
  }

  function buttonFiltros() {
    const btn = document.getElementById('catalogo-filtros-toggle');
    const filtros = document.getElementById('filtros-rapidos');
    let isOpen = false;

    btn.addEventListener('click', () => {
      isOpen = !isOpen;
      if (isOpen) {
        filtros.classList.remove('hidden');
        filtros.classList.add('block');
      } else {
        filtros.classList.remove('block');
        filtros.classList.add('hidden');
      }
    });
  }

  function inputBuscarProdutos() {
    const buscaInput = document.getElementById('catalogo-busca');

    let buscaTimeout;
    buscaInput.addEventListener('input', function () {
      clearTimeout(buscaTimeout);
      buscaTimeout = setTimeout(() => {
        window.dispatchEvent(new CustomEvent('productsSearch', { detail: this.value }));
      }, 500);
    });
  }

  function inputBuscarPorCategorias() {
    const buscaInputs = document.getElementsByClassName('item-categoria');
    Array.from(buscaInputs).forEach((buscaInput) => {
      buscaInput.addEventListener('click', function () {
        window.dispatchEvent(new CustomEvent('categorySearch', { detail: this.textContent }));
      });
    });
  }

  function inputBuscarPorCategorias() {
    const buscaInputs = document.getElementsByClassName('item-categoria');
    Array.from(buscaInputs).forEach((buscaInput) => {
      buscaInput.addEventListener('click', function (e) {
        e.preventDefault();

        // Remove active de todos
        Array.from(buscaInputs).forEach((el) => {
          el.classList.remove('active', 'bg-red-800', 'text-white');
          el.querySelector('img').src = '/catalogo/' + el.dataset.iconBlack;
          el.querySelector('span').classList.remove('text-white');
        });

        // Adiciona active no clicado
        this.classList.add('active', 'bg-red-800', 'text-white');
        this.querySelector('img').src = '/catalogo/' + this.dataset.iconWhite;
        this.querySelector('span').classList.add('text-white');

        window.dispatchEvent(new CustomEvent('categorySearch', { detail: this.textContent }));
      });
    });
  }

  function monitorarFiltrosAtivos() {
    const btnLimpar = document.getElementById('catalogo-limpar-filtros');
    const buscaInput = document.getElementById('catalogo-busca');
    const buscaInputs = document.getElementsByClassName('item-categoria');

    function atualizarVisibilidadeBotao() {
      let filtroAtivo = false;
      // Verifica se há texto no input de busca
      if (buscaInput && buscaInput.value.trim() !== '') filtroAtivo = true;
      // Verifica se alguma categoria está ativa
      Array.from(buscaInputs).forEach((el) => {
        if (el.classList.contains('active')) filtroAtivo = true;
      });
      btnLimpar.style.display = filtroAtivo ? 'flex' : 'none';
    }

    // Observa mudanças no input e nas categorias
    if (buscaInput) {
      buscaInput.addEventListener('input', atualizarVisibilidadeBotao);
    }
    Array.from(buscaInputs).forEach((el) => {
      el.addEventListener('click', () => {
        setTimeout(atualizarVisibilidadeBotao, 10);
      });
    });

    // Atualiza ao carregar
    atualizarVisibilidadeBotao();
  }
</script>
